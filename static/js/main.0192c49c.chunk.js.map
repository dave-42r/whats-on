{"version":3,"sources":["HomePageGrid.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HomePageGrid","defaultProps","className","isDraggable","ResponsiveGridLayout","WidthProvider","Responsive","layout","p","_","map","sampleData","item","i","y","result","Math","ceil","random","x","floor","w","h","toString","generateLayout","range","length","alt","show","name","src","image","medium","rating","average","generateDOM","App","path","to","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gTAkDeA,MA5Cf,WACK,IAAMC,EAAe,CACjBC,UAAW,SACXC,aAAa,GA8BZC,EAAuBC,wBAAcC,cAC3C,OACI,sBAAKJ,UAAU,eAAf,UACI,kDACA,cAACE,EAAD,2BAA0BH,GAA1B,aA/BR,WACI,IAAMM,EAYV,WACI,IAAMC,EAAIP,EACV,OAAOQ,IAAEC,IAAIC,GAAY,SAAUC,EAAMC,GACrC,IAAIC,EAAaL,IAAEM,OAAOP,EAAG,MAAQQ,KAAKC,KAAqB,EAAhBD,KAAKE,UAAgB,EACpE,MAAO,CACHC,EAAQ,EAAJN,EAAS,GACbC,EAAGE,KAAKI,MAAMP,EAAI,GAAKC,EACvBO,EAAG,EACHC,EAAG,EACHT,EAAGA,EAAEU,eArBEC,GACf,OAAOf,IAAEC,IAAID,IAAEgB,MAAMd,EAAWe,SAAS,SAAUb,GAAI,IAAD,EAClD,OACI,sBAAa,YAAWN,EAAOM,GAAI,cAAaA,EAAEU,WAAlD,UACI,qBAAKI,IAAKhB,EAAWE,GAAGe,KAAKC,KAAO,eAAgBC,IAAG,UAAEnB,EAAWE,GAAGe,KAAKG,aAArB,aAAE,EAA0BC,SACnF,sBAAK9B,UAAU,OAAf,oBAA8BS,EAAWE,GAAGe,KAAKK,OAAOC,QAAUvB,EAAWE,GAAGe,KAAKK,OAAOC,QAAU,MAAQ,UAC9G,qBAAKhC,UAAU,OAAf,SAAuBS,EAAWE,GAAGe,KAAKC,SAHpChB,MA4BTsB,U,eCHFC,MA7Bf,WACE,OACE,cAAC,IAAD,UACE,8BAIE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,IAAZ,SACE,sBAAKnC,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,IAAD,CAAMoC,GAAG,IAAT,SAAa,mBAAGC,GAAG,QAAN,gEAKf,mBAAGA,GAAG,UAAN,kIAGA,cAAC,EAAD,gBCjBCC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,YCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.0192c49c.chunk.js","sourcesContent":["import { defaultMaxListeners } from 'events';\r\nimport _ from \"lodash\";\r\nimport { Responsive, WidthProvider } from 'react-grid-layout';\r\nimport sampleData from './exampleData.json';\r\nimport './HomePageGrid.css'\r\n\r\nfunction HomePageGrid() {\r\n     const defaultProps = {\r\n         className: \"layout\",\r\n         isDraggable: false,\r\n    };\r\n\r\n    function generateDOM() {\r\n        const layout = generateLayout();\r\n        return _.map(_.range(sampleData.length), function (i) {\r\n            return (\r\n                <div key={i} data-grid={layout[i]} data-testid={i.toString()}>\r\n                    <img alt={sampleData[i].show.name + \" cover image\"} src={sampleData[i].show.image?.medium} />\r\n                    <div className=\"text\">Rating:{sampleData[i].show.rating.average ? sampleData[i].show.rating.average + \"/10\" : \"0/10\" }</div>\r\n                    <div className=\"text\">{sampleData[i].show.name}</div>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    function generateLayout() {\r\n        const p = defaultProps;\r\n        return _.map(sampleData, function (item, i) {\r\n            let y : number = _.result(p, \"y\") || Math.ceil(Math.random() * 4) + 1;\r\n            return {\r\n                x: (i * 2) % 12,\r\n                y: Math.floor(i / 6) * y,\r\n                w: 2,\r\n                h: 2,\r\n                i: i.toString()\r\n            };\r\n        });\r\n    }\r\n\r\n    const ResponsiveGridLayout = WidthProvider(Responsive);\r\n    return (\r\n        <div className=\"HomePageGrid\">\r\n            <h1>Last Added Shows</h1>\r\n            <ResponsiveGridLayout {...defaultProps}>\r\n                {generateDOM()}\r\n            </ResponsiveGridLayout>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePageGrid;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport HomePageGrid from './HomePageGrid';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/\">\r\n            <div className=\"App\">\r\n              <header className=\"App-header\">\r\n                <Link to=\"/\"><p id=\"Title\">\r\n                  What's on - your TV guide for the 21st century\r\n        </p>\r\n        </Link>\r\n              </header>\r\n              <p id=\"TagLine\">\r\n                TV Show and web series database. Create personalised schedules. Episode guide, cast, crew and character information.\r\n        </p>\r\n              <HomePageGrid />\r\n            </div>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './react-grid-layout/styles.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}