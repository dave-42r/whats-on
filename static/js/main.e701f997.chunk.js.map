{"version":3,"sources":["HomePageGrid.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HomePageGrid","layout","i","x","y","w","h","static","minW","maxW","layouts","lg","md","ResponsiveGridLayout","WidthProvider","Responsive","className","breakpoints","sm","xs","xxs","cols","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAuBeA,MArBf,WACI,IAAMC,EAAS,CACX,CAAEC,EAAG,UAAWC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,QAAQ,GAChD,CAAEL,EAAG,UAAWC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGE,KAAM,EAAGC,KAAM,GACvD,CAAEP,EAAG,UAAWC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,IAEnCI,EAAU,CAAEC,GAAIV,EAAQW,GAAIX,GAC5BY,EAAuBC,wBAAcC,cAC3C,OACI,qBAAKC,UAAU,eAAf,SACI,eAACH,EAAD,CAAsBG,UAAU,SAASN,QAASA,EAC9CO,YAAa,CAAEN,GAAI,KAAMC,GAAI,IAAKM,GAAI,IAAKC,GAAI,IAAKC,IAAK,GACzDC,KAAM,CAAEV,GAAI,GAAIC,GAAI,GAAIM,GAAI,EAAGC,GAAI,EAAGC,IAAK,GAF/C,UAGI,0CAAS,WACT,0CAAS,WACT,0CAAS,iBCIVE,MAhBf,WACE,OACE,sBAAKN,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qDAGA,wJAIF,cAAC,EAAD,QCFSO,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e701f997.chunk.js","sourcesContent":["import { Responsive, WidthProvider } from 'react-grid-layout';\r\n\r\nfunction HomePageGrid() {\r\n    const layout = [\r\n        { i: 'Column1', x: 0, y: 0, w: 1, h: 2, static: true },\r\n        { i: 'Column2', x: 1, y: 0, w: 3, h: 2, minW: 2, maxW: 4 },\r\n        { i: 'Column3', x: 4, y: 0, w: 1, h: 2 }\r\n    ];\r\n    const layouts = { lg: layout, md: layout};\r\n    const ResponsiveGridLayout = WidthProvider(Responsive);\r\n    return (\r\n        <div className=\"HomePageGrid\">\r\n            <ResponsiveGridLayout className=\"layout\" layouts={layouts}\r\n                breakpoints={{ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 }}\r\n                cols={{ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }}>\r\n                <div key=\"Column1\">Column 1</div>\r\n                <div key=\"Column2\">Column 2</div>\r\n                <div key=\"Column3\">Column 3</div>\r\n            </ResponsiveGridLayout>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePageGrid;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport HomePageGrid from './HomePageGrid';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          What's on - TV Bland\n        </p>\n        <p>\n          TV Show and web series database. Create personalised schedules. Episode guide, cast, crew and character information.\n        </p>        \n      </header>\n      <HomePageGrid />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}